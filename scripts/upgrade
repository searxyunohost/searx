#!/bin/bash

#=================================================
#
 GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)

#=================================================
# FIX OLD THINGS
#=================================================

# Fix is_public as a boolean value
if [ "${is_public,,}" = "yes" ]; then
	ynh_app_setting_set $app is_public 1
	is_public=1
elif [ "${is_public,,}" = "no" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi

# If final_path doesn't exist, create it
if [ -z $final_path ]; then
	final_path="/opt/yunohost/$app"
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

ynh_backup_before_upgrade	# Backup the current version of the app
ynh_clean_setup () {
	ynh_restore_upgradebackup	# restore it if the upgrade fails
}
ynh_abort_if_errors	# Exit if an error occurs during the execution of 
the script

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path $path_url)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Verify the checksum and backup the file if it's different
ynh_backup_if_checksum_is_different "$final_path/searx/settings.yml"

# Download, check integrity, uncompress and patch the source from 
app.src
ynh_setup_source "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config
if [ "$path_url" = "/" ]
then
	ynh_replace_string "__PATH_NO_ROOT__" "" 
/etc/nginx/conf.d/$domain.d/$app.conf
	sed --in-place '/#noroot*/d' /etc/nginx/conf.d/$domain.d/$app.conf
else
	ynh_replace_string "#noroot" "" /etc/nginx/conf.d/$domain.d/$app.conf
	ynh_replace_string "__PATH_NO_ROOT__" "$path_url" 
/etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPGRADE SEARX IN ITS VIRTUALENV
#=================================================

rm -r $final_path/lib/python2.7/site-packages/setuptools 
$final_path/lib/python2.7/site-packages/setuptools-*
virtualenv --system-site-packages "$final_path"
bash -c "source $final_path/bin/activate && pip install -U 
setuptools && pip install --requirement 
$final_path/requirements-ynh.txt --upgrade"

#=================================================
# CONFIGURE SEARX
#=================================================

# Change instance name
ynh_replace_string "instance_name : \"searx\"" "instance_name : 
\"YunoSearx\"" "$final_path/searx/settings.yml"

# Generate a secret key
ynh_replace_string "secret_key : \"ultrasecretkey\"" "secret_key : 
\"$(ynh_string_random)\"" "$final_path/searx/settings.yml"

# Modify the base_url parameter, if it's installed in a subpath
if [ "$path_url" != "/" ]
then
  ynh_replace_string "base_url : False" "base_url : 
http://${domain}${path_url}/" "$final_path/searx/settings.yml"
else
  ynh_replace_string "base_url : False" "base_url : False" 
"$final_path/searx/settings.yml"
fi
ynh_store_file_checksum "$final_path/searx/settings.yml"

#=================================================
# GENERIC FINALISATION
#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

chown $app: --recursive "$final_path"

#=================================================
# CONFIGURE UWSGI FOR SEARX
#=================================================

cp ../conf/searx.ini /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__APP__" "$app" /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__FINALPATH__" "$final_path" 
/etc/uwsgi/apps-available/$app.ini
systemctl restart uwsgi

#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
