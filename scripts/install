#!/bin/bash

#=================================================
#
 GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

final_path="/opt/yunohost/$app"
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app is_public $is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies git build-essential libxslt-dev python-dev 
python-virtualenv virtualenv python-pybabel zlib1g-dev libffi-dev 
libssl-dev python-lxml uwsgi uwsgi-plugin-python

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config
if [ "$path_url" = "/" ]
then
	ynh_replace_string "__PATH_NO_ROOT__" "" 
/etc/nginx/conf.d/$domain.d/$app.conf
	sed --in-place '/#noroot*/d' /etc/nginx/conf.d/$domain.d/$app.conf
else
	ynh_replace_string "#noroot" "" /etc/nginx/conf.d/$domain.d/$app.conf
	ynh_replace_string "__PATH_NO_ROOT__" "$path_url" 
/etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from 
app.src
ynh_setup_source "$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL SEARX IN A VIRTUALENV
#=================================================

virtualenv --system-site-packages "$final_path"
bash -c "source $final_path/bin/activate && pip install -U pip 
setuptools && pip install --requirement 
$final_path/requirements-ynh.txt"

#=================================================
# CONFIGURE SEARX
#=================================================

# Change instance name
ynh_replace_string "instance_name : \"searx\"" "instance_name : 
\"YunoSearx\"" "$final_path/searx/settings.yml"

# Generate a secret key
ynh_replace_string "secret_key : \"ultrasecretkey\"" "secret_key : 
\"$(ynh_string_random)\"" "$final_path/searx/settings.yml"

# Modify the base_url parameter, if it's installed in a subpath
if [ "$path_url" != "/" ]
then
  ynh_replace_string "base_url : False" "base_url : 
http://${domain}${path_url}/" "$final_path/searx/settings.yml"
else
  ynh_replace_string "base_url : False" "base_url : False" 
"$final_path/searx/settings.yml"
fi
ynh_store_file_checksum "$final_path/searx/settings.yml"

#=================================================
# SET PERMISSIONS ON SEARX DIRECTORY
#=================================================

chown $app: --recursive "$final_path"

#=================================================
# CONFIGURE UWSGI FOR SEARX
#=================================================

cp ../conf/searx.ini /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__APP__" "$app" /etc/uwsgi/apps-available/$app.ini
ynh_replace_string "__FINALPATH__" "$final_path" 
/etc/uwsgi/apps-available/$app.ini
ln -s /etc/uwsgi/apps-available/$app.ini 
/etc/uwsgi/apps-enabled/$app.ini

#=================================================
# ENABLE UWSGI SERVICE IN ADMIN PANEL
#=================================================

systemctl restart uwsgi
# Ajoute le service au monitoring de Yunohost.
yunohost service add uwsgi --log "/var/log/uwsgi/app/$app.log"

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
